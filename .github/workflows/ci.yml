name: CI Pipeline

on:
  pull_request:
    branches: ["develop", "main"]
  push:
    branches: ["develop", "main"]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: aparat_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/api/package-lock.json

      - name: Install dependencies
        working-directory: backend/api
        run: npm ci

      - name: Run linter
        working-directory: backend/api
        run: npm run lint

      - name: Run tests
        working-directory: backend/api
        run: npm test -- --coverage --ci
        env:
          NODE_ENV: test
          DB_HOST: localhost
          DB_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: aparat_test

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: always()
        with:
          files: ./backend/api/coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: false
          tags: aparat-backend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max